services:
  # app:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: jobmatch-app
  #   networks:
  #     - jobmatch-network
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - db
  #     - redis
  #   environment:
  #     - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/job-match
  #     - SPRING_DATASOURCE_USERNAME=postgres
  #     - SPRING_DATASOURCE_PASSWORD=postgres
  #     - SPRING_DATA_REDIS_HOST=redis
  #     - SPRING_DATA_REDIS_PORT=6379
  #     - SPRING_DATA_REDIS_PASSWORD=jobmatch_redis_pass
  #   volumes:
  #     - ./logs:/logs
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s
  db:
    image: postgres:16-alpine
    container_name: jobmatch-db
    networks:
      - jobmatch-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=job-match
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: jobmatch-redis
    networks:
      - jobmatch-network
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass jobmatch_redis_pass
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=jobmatch_redis_pass
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  jobmatch-network:

volumes:
  redis_data:
  postgres_data: