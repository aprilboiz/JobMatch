"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Alert, AlertDescription } from "@/components/ui/alert";
import {
  HelpCircle,
  Clock,
  RefreshCw,
  LogOut,
  Terminal,
  Info,
} from "lucide-react";
import { TokenManager } from "@/lib/utils/token-manager";

export function TokenHelp() {
  const [debugInfo, setDebugInfo] = useState<any>(null);

  const showDebugInfo = () => {
    setDebugInfo(TokenManager.getDebugInfo());
  };

  const manualTokenUpdate = `
// ƒê·ªÉ c·∫≠p nh·∫≠t token th·ªß c√¥ng qua console tr√¨nh duy·ªát:

// 1. M·ªü Developer Tools (F12)
// 2. V√†o tab Console
// 3. Ch·∫°y l·ªánh sau:

// C·∫≠p nh·∫≠t access token
localStorage.setItem('access_token', 'YOUR_NEW_ACCESS_TOKEN_HERE');

// C·∫≠p nh·∫≠t refresh token
localStorage.setItem('refresh_token', 'YOUR_NEW_REFRESH_TOKEN_HERE');

// C·∫≠p nh·∫≠t th·ªùi gian h·∫øt h·∫°n (gi√¢y)
localStorage.setItem('token_expires_in', '3600');

// C·∫≠p nh·∫≠t timestamp hi·ªán t·∫°i
localStorage.setItem('token_timestamp', Date.now().toString());

// Sau ƒë√≥ reload trang
window.location.reload();
`;

  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button variant="outline" size="sm">
          <HelpCircle className="h-4 w-4 mr-2" />
          H∆∞·ªõng d·∫´n x·ª≠ l√Ω token
        </Button>
      </DialogTrigger>
      <DialogContent className="max-w-4xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Clock className="h-5 w-5" />
            H∆∞·ªõng d·∫´n x·ª≠ l√Ω JWT Token h·∫øt h·∫°n
          </DialogTitle>
        </DialogHeader>

        <div className="space-y-6">
          <Alert>
            <Info className="h-4 w-4" />
            <AlertDescription>
              H·ªá th·ªëng t·ª± ƒë·ªông x·ª≠ l√Ω token h·∫øt h·∫°n v√† l√†m m·ªõi token khi c·∫ßn
              thi·∫øt. D∆∞·ªõi ƒë√¢y l√† th√¥ng tin chi ti·∫øt v·ªÅ c√°ch th·ª©c ho·∫°t ƒë·ªông.
            </AlertDescription>
          </Alert>

          <Accordion type="single" collapsible className="w-full">
            <AccordionItem value="overview">
              <AccordionTrigger>
                <div className="flex items-center gap-2">
                  <Clock className="h-4 w-4" />
                  T·ªïng quan v·ªÅ x·ª≠ l√Ω token
                </div>
              </AccordionTrigger>
              <AccordionContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <Card>
                    <CardHeader className="pb-2">
                      <CardTitle className="text-sm flex items-center gap-2">
                        <RefreshCw className="h-4 w-4" />
                        T·ª± ƒë·ªông l√†m m·ªõi
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <p className="text-sm text-gray-600">
                        H·ªá th·ªëng t·ª± ƒë·ªông l√†m m·ªõi token khi c√≤n 5 ph√∫t tr∆∞·ªõc khi
                        h·∫øt h·∫°n
                      </p>
                    </CardContent>
                  </Card>

                  <Card>
                    <CardHeader className="pb-2">
                      <CardTitle className="text-sm flex items-center gap-2">
                        <LogOut className="h-4 w-4" />
                        T·ª± ƒë·ªông ƒëƒÉng xu·∫•t
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <p className="text-sm text-gray-600">
                        Khi token h·∫øt h·∫°n v√† kh√¥ng th·ªÉ l√†m m·ªõi, h·ªá th·ªëng t·ª± ƒë·ªông
                        ƒëƒÉng xu·∫•t
                      </p>
                    </CardContent>
                  </Card>
                </div>
              </AccordionContent>
            </AccordionItem>

            <AccordionItem value="automatic">
              <AccordionTrigger>
                <div className="flex items-center gap-2">
                  <RefreshCw className="h-4 w-4" />
                  C∆° ch·∫ø t·ª± ƒë·ªông
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <div className="space-y-4">
                  <div className="bg-blue-50 p-4 rounded-lg">
                    <h4 className="font-medium mb-2">Ki·ªÉm tra ƒë·ªãnh k·ª≥:</h4>
                    <ul className="text-sm space-y-1">
                      <li>‚Ä¢ Ki·ªÉm tra tr·∫°ng th√°i token m·ªói 30 gi√¢y</li>
                      <li>‚Ä¢ Hi·ªÉn th·ªã c·∫£nh b√°o khi token s·∫Øp h·∫øt h·∫°n</li>
                      <li>‚Ä¢ T·ª± ƒë·ªông l√†m m·ªõi khi c√≤n 5 ph√∫t</li>
                    </ul>
                  </div>

                  <div className="bg-green-50 p-4 rounded-lg">
                    <h4 className="font-medium mb-2">X·ª≠ l√Ω API calls:</h4>
                    <ul className="text-sm space-y-1">
                      <li>‚Ä¢ T·ª± ƒë·ªông retry khi nh·∫≠n 401 Unauthorized</li>
                      <li>‚Ä¢ L√†m m·ªõi token v√† th·ª≠ l·∫°i request</li>
                      <li>‚Ä¢ Chuy·ªÉn ƒë·∫øn login n·∫øu refresh th·∫•t b·∫°i</li>
                    </ul>
                  </div>
                </div>
              </AccordionContent>
            </AccordionItem>

            <AccordionItem value="manual">
              <AccordionTrigger>
                <div className="flex items-center gap-2">
                  <Terminal className="h-4 w-4" />
                  C·∫≠p nh·∫≠t token th·ªß c√¥ng
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <div className="space-y-4">
                  <Alert>
                    <Terminal className="h-4 w-4" />
                    <AlertDescription>
                      Ch·ªâ s·ª≠ d·ª•ng khi c·∫ßn thi·∫øt cho m·ª•c ƒë√≠ch debug ho·∫∑c testing
                    </AlertDescription>
                  </Alert>

                  <div className="bg-gray-50 p-4 rounded-lg">
                    <pre className="text-xs overflow-x-auto">
                      <code>{manualTokenUpdate}</code>
                    </pre>
                  </div>
                </div>
              </AccordionContent>
            </AccordionItem>

            <AccordionItem value="debug">
              <AccordionTrigger>
                <div className="flex items-center gap-2">
                  <Info className="h-4 w-4" />
                  Th√¥ng tin debug
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <div className="space-y-4">
                  <Button onClick={showDebugInfo} variant="outline" size="sm">
                    L·∫•y th√¥ng tin token hi·ªán t·∫°i
                  </Button>

                  {debugInfo && (
                    <div className="bg-gray-50 p-4 rounded-lg">
                      <pre className="text-xs overflow-x-auto">
                        <code>{JSON.stringify(debugInfo, null, 2)}</code>
                      </pre>
                    </div>
                  )}
                </div>
              </AccordionContent>
            </AccordionItem>

            <AccordionItem value="troubleshooting">
              <AccordionTrigger>
                <div className="flex items-center gap-2">
                  <HelpCircle className="h-4 w-4" />
                  X·ª≠ l√Ω s·ª± c·ªë
                </div>
              </AccordionTrigger>
              <AccordionContent>
                <div className="space-y-4">
                  <div className="grid grid-cols-1 gap-4">
                    <Card>
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">
                          üî¥ Token h·∫øt h·∫°n li√™n t·ª•c
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-gray-600 mb-2">Gi·∫£i ph√°p:</p>
                        <ul className="text-sm space-y-1">
                          <li>‚Ä¢ Ki·ªÉm tra ƒë·ªìng h·ªì h·ªá th·ªëng</li>
                          <li>‚Ä¢ X√≥a localStorage v√† ƒëƒÉng nh·∫≠p l·∫°i</li>
                          <li>‚Ä¢ Li√™n h·ªá admin n·∫øu v·∫•n ƒë·ªÅ ti·∫øp t·ª•c</li>
                        </ul>
                      </CardContent>
                    </Card>

                    <Card>
                      <CardHeader className="pb-2">
                        <CardTitle className="text-sm">
                          üü° Refresh token th·∫•t b·∫°i
                        </CardTitle>
                      </CardHeader>
                      <CardContent>
                        <p className="text-sm text-gray-600 mb-2">Gi·∫£i ph√°p:</p>
                        <ul className="text-sm space-y-1">
                          <li>‚Ä¢ ƒêƒÉng nh·∫≠p l·∫°i</li>
                          <li>‚Ä¢ Ki·ªÉm tra k·∫øt n·ªëi m·∫°ng</li>
                          <li>‚Ä¢ Ki·ªÉm tra tr·∫°ng th√°i server</li>
                        </ul>
                      </CardContent>
                    </Card>
                  </div>
                </div>
              </AccordionContent>
            </AccordionItem>
          </Accordion>
        </div>
      </DialogContent>
    </Dialog>
  );
}
